version: '3'
services:

  backend:
    container_name: backend-waixi
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "30080:12345"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - backend/.env
#    depends_on:
#      - mongo
#      - redis
#      - mysql
    networks:
      - flask_demo
    environment:
      MONGO_DB: quality_control_actor

  frontend:
    container_name: frontend-waixi
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - flask_demo
    ports:
      - "30081:8080"
    restart: always

#  mysql:
#    container_name: mysql
#    image: mysql
#    ports:
#      - "13306:3306"
#    volumes:
#      - "${MYSQL_VOLUME}/data:/var/lib/mysql"
#      - "${MYSQL_VOLUME}/logs:/logs"
#      - "${MYSQL_VOLUME}/conf:/etc/mysql/conf.d"
#    environment:
#      MYSQL_ROOT_PASSWORD: 123456
#    networks:
#      - flask_demo
#    restart: always
#
#  mongo:
#    container_name: mongo
#    image: mongo:4.0.4
#    ports:
#      - "27017:27017"
#    volumes:
#      - "${MONGO_VOLUME}/data/db:/data/db"
#      - "${MONGO_VOLUME}/data/configdb:/data/configdb"
#    networks:
#      - flask_demo
#    restart: always
#
#  redis:
#    container_name: redis
#    image: redis
#    ports:
#      - "6379:6379"
#    volumes:
#      - "${REDIS_VOLUME}/data:/data"
#    networks:
#      - flask_demo
#    restart: always

networks:
  flask_demo:
    external: true
